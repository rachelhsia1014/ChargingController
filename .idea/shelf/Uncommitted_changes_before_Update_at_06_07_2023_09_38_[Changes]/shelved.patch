Index: ChargingSimulator/parameters.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>param = {\r\n    # Datetime settings\r\n    \"tnow_initial\": \"2022-03-21 06:00:00\",  # Simulation starting date\r\n    \"ev_file\": \"ChargingSimulator/data/ev_march.csv\",\r\n    \"price_file\": \"ChargingSimulator/data/Energy_price__20220310_20220331.csv\",\r\n    \"Enable_controller\": True,\r\n    \"Controlled_ev\": \"2\",\r\n    # EV data file location (ChargingSimulator is needed, since python is run from Matlab folder)\r\n\r\n    # Controller parameters:\r\n    \"Testbed\": False,  # Determines whether or not the mouse should be moved to control the EV charger on the testbed\r\n    \"Ts_data\": 5,  # [m] data sample time (for optimization model) minimum is 1 (if changed the signal in simulink needs to be changed as well)\r\n    \"Ts\": 3,  # [s] simulation sample time (only applicable in stand-alone mode)\r\n    \"N\": 144,  # number of iterations (this is also controlled by the matlab signal)\r\n\r\n    # Optimization dummie values:\r\n    \"eff\": 0.83,  # Total charging efficiency (from charger to EV)\r\n    \"Imin\": 6,  # Minimum charger current (not used atm) 0.1\r\n    \"Imax\": 20,  # Maximum charger current 3\r\n    \"Vcharger\": 380,  # Maximum charger voltage 380\r\n\r\n    # Troubleshooting\r\n    \"E_factor\": 1,\r\n    # (default = 1) Requested energy is multiplied by this value, use this if optimization problem becomes infeasable.\r\n\r\n}\r\n\r\n'''\r\ngrid power available around 11 kW\r\ncharger power available around 10 kW\r\nif three batteries: each car can have around 3 kW power max\r\n(which according to max current at around 8 amps)\r\n'''
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChargingSimulator/parameters.py b/ChargingSimulator/parameters.py
--- a/ChargingSimulator/parameters.py	(revision 4ee244a36043f5766de5fc78db0dc1a1ce500ea5)
+++ b/ChargingSimulator/parameters.py	(date 1688465038413)
@@ -5,6 +5,7 @@
     "price_file": "ChargingSimulator/data/Energy_price__20220310_20220331.csv",
     "Enable_controller": True,
     "Controlled_ev": "2",
+    "PV_scale_factor": 1,
     # EV data file location (ChargingSimulator is needed, since python is run from Matlab folder)
 
     # Controller parameters:
Index: ChargingSimulator/controller.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># -*- coding: utf-8 -*-\r\n\"\"\"\r\nCreated on Mon Feb 27 15:31:52 2023\r\n\r\nThis file runs all other python files and sends the control values to the charger.\r\n\r\n@author: roela\r\n\"\"\"\r\nimport ChargingSimulator.InsiteReportsHandler\r\nimport ChargingSimulator.OptimizationModel as opt\r\nfrom ChargingSimulator.parameters import param\r\nimport pandas as pd\r\nfrom datetime import datetime as dt\r\nimport datetime\r\nimport numpy as np\r\nfrom ChargingSimulator.PriceCurveLoader import load_price\r\n\r\n\r\n## Defining the function controller(i), for which i is the iteration number\r\ndef controller(i, charger_connect):\r\n    # updating tnow\r\n    tnow_initial = param['tnow_initial']\r\n    Ts_data = param['Ts_data']\r\n    tnow = dt.strptime(tnow_initial, '%Y-%m-%d %H:%M:%S') + i * datetime.timedelta(minutes=Ts_data)\r\n\r\n    # load in the considered horizon\r\n    df_load = ChargingSimulator.InsiteReportsHandler.InsiteReportsHandler().obtain_loads(tnow, Ts_data)[0]\r\n\r\n    # price curve in the considered horizon\r\n    df_price = load_price()\r\n    df_price = df_price[df_price.index.isin(df_load.index)]\r\n\r\n    # evs to be scheduled in the horizon\r\n    ev_input = pd.read_csv(param['ev_file'], dayfirst=True, parse_dates=[2, 3], dtype={0: np.int64})\r\n    mask = (ev_input['T_departure'] >= tnow) & (ev_input['T_arrival'] <= tnow)\r\n    ev_input = ev_input.loc[mask]\r\n    if i == 0:\r\n        columns = ['ChargerId', 'E_requested', 'T_arrival', 'T_departure']\r\n        ev_status = pd.DataFrame(columns=columns)\r\n\r\n        # create a file to store the calculated current schedule\r\n        df = pd.DataFrame()\r\n        df['Building Load (kWh)'] = df_load['Load']\r\n        df['PV (kWh)'] = df_load['PV']\r\n        df['Price (Euros/kWh)'] = df_price['Price (Euros/kWh)']\r\n        df.index = pd.to_datetime(df.index)\r\n        df.to_csv('ChargingSimulator/data/sim_out.csv', header=True, index=True)\r\n\r\n    else:\r\n        ev_status = pd.read_csv('ChargingSimulator/data/ev.csv', header=(0), parse_dates=[2, 3], dtype={0: np.int64})\r\n        mask = (ev_status['T_departure'] >= tnow)\r\n        ev_status = ev_status.loc[mask]\r\n\r\n    new_ev = ev_input[~ev_input['ChargerId'].isin(ev_status['ChargerId'])]\r\n    if new_ev.empty:\r\n        #print(\"No new ev at time = \" + str(tnow))\r\n        df_ev = ev_status\r\n    else:# check feasibility and then add to the ev.csv, which is the list with involved evs\r\n        new_ev = new_ev.reset_index()\r\n        new_ev.drop('index', axis=1, inplace=True)\r\n        # new_ev['E_requested'] = new_ev['E_requested'] * 1.1 # request more to ensure enough delivery\r\n        new_ev['E_requested'] = new_ev['E_requested'].astype(float)\r\n        mask = new_ev['E_requested'] > ((new_ev['T_departure'] - new_ev['T_arrival']).dt.seconds / 3600) * (\r\n                    param['Vcharger'] * param['Imax'] * param['eff']) / 1000 * param['eff'] * param['E_factor']\r\n        new_ev.loc[mask, 'E_requested'] = ((new_ev['T_departure'] - new_ev['T_arrival']).dt.seconds / 3600) * (\r\n                    param['Vcharger'] * param['Imax'] * param['eff']) / 1000 * param['eff'] * param['E_factor']\r\n        df_ev = pd.concat([ev_status, new_ev], ignore_index=False)\r\n        default_Icharge = [0] * (param['N'] + 1)\r\n        sim_out = pd.read_csv('ChargingSimulator/data/sim_out.csv', index_col=0)\r\n        for i in range(0, len(new_ev)):\r\n            print(\"EV\" + str(new_ev['ChargerId'][i]) + \" comes at time = \" + str(tnow))\r\n            if str(new_ev['ChargerId'][i]) == param['Controlled_ev']:\r\n                charger_connect = True\r\n            sim_out['EV' + str(new_ev['ChargerId'][i])] = default_Icharge\r\n        sim_out.to_csv('ChargingSimulator/data/sim_out.csv', header=True, index=True)\r\n\r\n    leaving_ev = df_ev.index[df_ev['T_departure'] == tnow]\r\n    for leaving_index in leaving_ev:\r\n        print('EV' + str(df_ev.loc[leaving_index, 'ChargerId']) + ' is leaving.')\r\n        if param['Controlled_ev'] in str(df_ev.loc[leaving_index, 'ChargerId']):\r\n            charger_connect = False\r\n        df_ev = df_ev.drop(leaving_index)\r\n\r\n\r\n    df_ev.reset_index(drop=True, inplace=True)\r\n    # Running the optimization model and return the optimized current to be sent\r\n    sim_out = pd.read_csv('ChargingSimulator/data/sim_out.csv', index_col=0)\r\n    if len(df_ev) > 0:\r\n        if param['Enable_controller']:\r\n            Icharge = opt.runOptimization(df_load, df_ev, tnow, Ts_data, df_price)\r\n        else:\r\n            print(\"Optimization at time = \" + str(tnow))\r\n            for i in range(len(df_ev)):\r\n                if df_ev.iloc[i, 1] > 0:\r\n                    Icharge = param['Imax']\r\n                    print(\"EV\" + str(df_ev['ChargerId'][i]) + \" (requesting \" + str(df_ev.iloc[i, 1]) + \" kWh) is charged at \" + str(Icharge) + \"A at \" + str(tnow))\r\n                    df_ev.iloc[i, 1] = df_ev.iloc[i, 1] - param['Vcharger'] * param['Imax'] / 1000 * param['eff'] * Ts_data / 60\r\n                    if df_ev.iloc[i, 1] < 0 or round(df_ev.iloc[i, 1], 2) == 0.00:\r\n                        df_ev.iloc[i, 1] = 0\r\n                else:\r\n                    Icharge = 0\r\n                    print(\"EV\" + str(df_ev['ChargerId'][i]) + \" is fully charged at time \" + str(tnow))\r\n                sim_out.loc[str(tnow), 'EV' + str(df_ev['ChargerId'][i])] = Icharge\r\n\r\n            sim_out.to_csv('ChargingSimulator/data/sim_out.csv', header=True, index=True)\r\n            df_ev.to_csv(\"ChargingSimulator/data/ev.csv\", index=False)\r\n\r\n    else:\r\n        print(\"No ev to schedule at time = \" + str(tnow))\r\n        Icharge = param['Imin']\r\n        df_ev.to_csv(\"ChargingSimulator/data/ev.csv\", index=False)\r\n\r\n    return tnow, Icharge, charger_connect
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChargingSimulator/controller.py b/ChargingSimulator/controller.py
--- a/ChargingSimulator/controller.py	(revision 4ee244a36043f5766de5fc78db0dc1a1ce500ea5)
+++ b/ChargingSimulator/controller.py	(date 1688465177700)
@@ -41,7 +41,7 @@
         # create a file to store the calculated current schedule
         df = pd.DataFrame()
         df['Building Load (kWh)'] = df_load['Load']
-        df['PV (kWh)'] = df_load['PV']
+        df['PV (kWh)'] = df_load['PV'] * param['PV_scale_factor']
         df['Price (Euros/kWh)'] = df_price['Price (Euros/kWh)']
         df.index = pd.to_datetime(df.index)
         df.to_csv('ChargingSimulator/data/sim_out.csv', header=True, index=True)
Index: ChargingSimulator/uncontrolled.py
===================================================================
diff --git a/ChargingSimulator/uncontrolled.py b/ChargingSimulator/uncontrolled.py
deleted file mode 100644
--- a/ChargingSimulator/uncontrolled.py	(revision 4ee244a36043f5766de5fc78db0dc1a1ce500ea5)
+++ /dev/null	(revision 4ee244a36043f5766de5fc78db0dc1a1ce500ea5)
@@ -1,101 +0,0 @@
-# -*- coding: utf-8 -*-
-"""
-Created on Mon Feb 27 15:31:52 2023
-
-This file runs all other python files and sends the control values to the charger.
-
-@author: roela
-"""
-import ChargingSimulator.InsiteReportsHandler
-import ChargingSimulator.OptimizationModel as opt
-from ChargingSimulator.parameters import param
-import pandas as pd
-from datetime import datetime as dt
-import datetime
-import numpy as np
-from ChargingSimulator.PriceCurveLoader import load_price
-
-
-## Defining the function controller(i), for which i is the iteration number
-def controller(i, ev_present):
-    # updating tnow
-    tnow_initial = param['tnow_initial']
-    Ts_data = param['Ts_data']
-    tnow = dt.strptime(tnow_initial, '%Y-%m-%d %H:%M:%S') + i * datetime.timedelta(minutes=Ts_data)
-
-    # load in the considered horizon
-    df_load = ChargingSimulator.InsiteReportsHandler.InsiteReportsHandler().obtain_loads(tnow, Ts_data)[0]
-
-    # price curve in the considered horizon
-    df_price = load_price()
-    df_price = df_price[df_price.index.isin(df_load.index)]
-
-    # evs to be scheduled in the horizon
-    ev_input = pd.read_csv(param['ev_file'], dayfirst=True, parse_dates=[2, 3], dtype={0: np.int64})
-    mask = (ev_input['T_departure'] >= tnow) & (ev_input['T_arrival'] <= tnow)
-    ev_input = ev_input.loc[mask]
-    if i == 0:
-        columns = ['ChargerId', 'E_requested', 'T_arrival', 'T_departure']
-        ev_status = pd.DataFrame(columns=columns)
-
-        # create a file to store the calculated current schedule
-        df = pd.DataFrame()
-        df['Building Load (kWh)'] = df_load['Load']
-        df['PV (kWh)'] = df_load['PV']
-        df['Price (Euros/kWh)'] = df_price['Price (Euros/kWh)']
-        df.index = pd.to_datetime(df.index)
-        df.to_csv('ChargingSimulator/data/sim_out.csv', header=True, index=True)
-
-    else:
-        ev_status = pd.read_csv('ChargingSimulator/data/ev.csv', header=(0), parse_dates=[2, 3], dtype={0: np.int64})
-        mask = (ev_status['T_departure'] >= tnow)
-        ev_status = ev_status.loc[mask]
-
-    new_ev = ev_input[~ev_input['ChargerId'].isin(ev_status['ChargerId'])]
-    if new_ev.empty:
-        #print("No new ev at time = " + str(tnow))
-        df_ev = ev_status
-    else:# check feasibility and then add to the ev.csv, which is the list with involved evs
-        new_ev = new_ev.reset_index()
-        new_ev.drop('index', axis=1, inplace=True)
-        # new_ev['E_requested'] = new_ev['E_requested'] * 1.1 # request more to ensure enough delivery
-        new_ev['E_requested'] = new_ev['E_requested'].astype(float)
-        mask = new_ev['E_requested'] > ((new_ev['T_departure'] - new_ev['T_arrival']).dt.seconds / 3600) * (
-                    param['Vcharger'] * param['Imax'] * param['eff']) / 1000 * param['eff'] * param['E_factor']
-        new_ev.loc[mask, 'E_requested'] = ((new_ev['T_departure'] - new_ev['T_arrival']).dt.seconds / 3600) * (
-                    param['Vcharger'] * param['Imax'] * param['eff']) / 1000 * param['eff'] * param['E_factor']
-        df_ev = pd.concat([ev_status, new_ev], ignore_index=False)
-        default_Icharge = [0] * (param['N'] + 1)
-        sim_out = pd.read_csv('ChargingSimulator/data/sim_out.csv', index_col=0)
-        for i in range(0, len(new_ev)):
-            print("EV" + str(new_ev['ChargerId'][i]) + " comes at time = " + str(tnow))
-            if str(new_ev['ChargerId'][i]) == param['Controlled_ev']:
-                ev_present = True
-            sim_out['EV' + str(new_ev['ChargerId'][i])] = default_Icharge
-        sim_out.to_csv('ChargingSimulator/data/sim_out.csv', header=True, index=True)
-
-    leaving_ev = df_ev.index[df_ev['T_departure'] == tnow]
-    for leaving_index in leaving_ev:
-        print('EV' + str(df_ev.loc[leaving_index, 'ChargerId']) + ' is leaving.')
-        if param['Controlled_ev'] in str(df_ev.loc[leaving_index, 'ChargerId']):
-            ev_present = False
-        df_ev = df_ev.drop(leaving_index)
-
-
-    df_ev.reset_index(drop=True, inplace=True)
-    # Running the optimization model and return the optimized current to be sent
-    if len(df_ev) > 0:
-        Icharge = param['Imax']
-        for i in range(len(df_ev)):
-            df_ev.iloc[i, 1] = df_ev.iloc[i, 1] - param['Imax']*param['Vcharger']*param['eff']*Ts_data/60
-            if df_ev.iloc[i, 1] < 0 or round(df_ev.iloc[i, 1], 2) == 0.00:
-                df_ev.iloc[i, 1] = 0
-
-        df_ev.to_csv("ChargingSimulator/data/ev.csv", index=False)
-
-    else:
-        print("No ev presents at time = " + str(tnow))
-        Icharge = 0
-        df_ev.to_csv("ChargingSimulator/data/ev.csv", index=False)
-
-    return tnow, Icharge, ev_present
\ No newline at end of file
Index: ChargingSimulator/data/ev.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>ChargerId,E_requested,T_arrival,T_departure,I_arrival,I_departure\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChargingSimulator/data/ev.csv b/ChargingSimulator/data/ev.csv
--- a/ChargingSimulator/data/ev.csv	(revision 4ee244a36043f5766de5fc78db0dc1a1ce500ea5)
+++ b/ChargingSimulator/data/ev.csv	(date 1688465200257)
@@ -1,1 +1,4 @@
 ChargerId,E_requested,T_arrival,T_departure,I_arrival,I_departure
+2,32.454660015749205,2022-03-21 08:30:00,2022-03-21 14:15:00,1647851400000000000,1647872100000000000
+0,33.39560334225751,2022-03-21 08:30:00,2022-03-21 14:30:00,1647851400000000000,1647873000000000000
+1,38.87230000157604,2022-03-21 08:30:00,2022-03-21 16:45:00,1647851400000000000,1647881100000000000
Index: ChargingSimulator/_InsideReportsToken
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>40a6a-mjy1zdewytnizg
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChargingSimulator/_InsideReportsToken b/ChargingSimulator/_InsideReportsToken
--- a/ChargingSimulator/_InsideReportsToken	(revision 4ee244a36043f5766de5fc78db0dc1a1ce500ea5)
+++ b/ChargingSimulator/_InsideReportsToken	(date 1688464778246)
@@ -1,1 +1,1 @@
-40a6a-mjy1zdewytnizg
\ No newline at end of file
+7c2d2-nzq2zjgwn2y1ot
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6e08f63a-6890-4c9c-ae04-3423b0eb95c4\" name=\"Changes\" comment=\"Add uncontrolled script.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.name\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.name\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ChargingSimulator/OptimizationModel.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ChargingSimulator/OptimizationModel.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ChargingSimulator/PriceCurveLoader.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ChargingSimulator/PriceCurveLoader.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ChargingSimulator/_InsideReportsToken\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ChargingSimulator/_InsideReportsToken\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ChargingSimulator/controller.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ChargingSimulator/controller.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ChargingSimulator/data/ev.csv\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ChargingSimulator/data/ev.csv\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ChargingSimulator/data/ev_march.csv\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ChargingSimulator/data/ev_march.csv\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ChargingSimulator/data/ev_march_test.csv\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ChargingSimulator/data/sim_out.csv\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ChargingSimulator/data/sim_out.csv\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ChargingSimulator/parameters.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ChargingSimulator/parameters.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2RIwAL8ZgYVaNIAeNJ9n7Egym59\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Rachel/OneDrive - TU Eindhoven/Kropman project/5-Code/V2XTestbed/ChargingSimulator&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.fileTypes&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Rachel\\OneDrive - TU Eindhoven\\Kropman project\\5-Code\\V2XTestbed\\ChargingSimulator\" />\r\n      <recent name=\"C:\\Users\\avans\\PycharmProjects\\ChargingController\\ChargingSimulator\\data\" />\r\n      <recent name=\"C:\\Users\\avans\\PycharmProjects\\ChargingController\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6e08f63a-6890-4c9c-ae04-3423b0eb95c4\" name=\"Changes\" comment=\"\" />\r\n      <created>1686950759501</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1686950759501</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Controller fixed, with results collected in sim_out. Tested with main_test.py\">\r\n      <created>1687157450489</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687157450489</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Controller fixed, with results collected in sim_out. Tested with main_test.py\">\r\n      <created>1687162496353</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687162496353</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Controller tested on testbed.\">\r\n      <created>1687176113917</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687176113917</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Push test.\">\r\n      <created>1687177523240</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687177523240</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Push test.\">\r\n      <created>1687188108922</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687188108922</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Price curve added in controller.py, but not in optimization.\">\r\n      <created>1687425541804</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687425541804</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Plot the simulation with updated values from each iteration.\">\r\n      <created>1687524418067</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687524418067</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Plot the simulation with updated values from each iteration.\">\r\n      <created>1687773784252</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687773784252</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Add uncontrolled script.\">\r\n      <created>1687875225617</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687875225617</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Add uncontrolled script.\">\r\n      <created>1688034913557</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688034913557</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"11\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Controller fixed, with results collected in sim_out. Tested with main_test.py\" />\r\n    <MESSAGE value=\"Controller tested on testbed.\" />\r\n    <MESSAGE value=\"Push test.\" />\r\n    <MESSAGE value=\"Price curve added in controller.py, but not in optimization.\" />\r\n    <MESSAGE value=\"Plot the simulation with updated values from each iteration.\" />\r\n    <MESSAGE value=\"Add uncontrolled script.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Add uncontrolled script.\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/ChargingSimulator/controller_plotting.py</url>\r\n          <line>91</line>\r\n          <option name=\"timeStamp\" value=\"57\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/ChargingSimulator/controller.py</url>\r\n          <line>102</line>\r\n          <option name=\"timeStamp\" value=\"59\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/ChargingSimulator/PriceCurveLoader.py</url>\r\n          <line>5</line>\r\n          <option name=\"timeStamp\" value=\"60\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n      <default-breakpoints>\r\n        <breakpoint type=\"python-exception\">\r\n          <properties notifyOnTerminate=\"true\" exception=\"BaseException\">\r\n            <option name=\"notifyOnTerminate\" value=\"true\" />\r\n          </properties>\r\n        </breakpoint>\r\n      </default-breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4ee244a36043f5766de5fc78db0dc1a1ce500ea5)
+++ b/.idea/workspace.xml	(date 1688561351815)
@@ -4,19 +4,15 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="6e08f63a-6890-4c9c-ae04-3423b0eb95c4" name="Changes" comment="Add uncontrolled script.">
-      <change beforePath="$PROJECT_DIR$/.idea/.name" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.name" afterDir="false" />
+    <list default="true" id="6e08f63a-6890-4c9c-ae04-3423b0eb95c4" name="Changes" comment="Add testing for also december.">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ChargingSimulator/OptimizationModel.py" beforeDir="false" afterPath="$PROJECT_DIR$/ChargingSimulator/OptimizationModel.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ChargingSimulator/PriceCurveLoader.py" beforeDir="false" afterPath="$PROJECT_DIR$/ChargingSimulator/PriceCurveLoader.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ChargingSimulator/_InsideReportsToken" beforeDir="false" afterPath="$PROJECT_DIR$/ChargingSimulator/_InsideReportsToken" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ChargingSimulator/controller.py" beforeDir="false" afterPath="$PROJECT_DIR$/ChargingSimulator/controller.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ChargingSimulator/data/ev.csv" beforeDir="false" afterPath="$PROJECT_DIR$/ChargingSimulator/data/ev.csv" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ChargingSimulator/data/ev_march.csv" beforeDir="false" afterPath="$PROJECT_DIR$/ChargingSimulator/data/ev_march.csv" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ChargingSimulator/data/ev_march_test.csv" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/ChargingSimulator/data/sim_out.csv" beforeDir="false" afterPath="$PROJECT_DIR$/ChargingSimulator/data/sim_out.csv" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ChargingSimulator/parameters.py" beforeDir="false" afterPath="$PROJECT_DIR$/ChargingSimulator/parameters.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ChargingSimulator/uncontrolled.py" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -41,16 +37,17 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/Rachel/OneDrive - TU Eindhoven/Kropman project/5-Code/V2XTestbed/ChargingSimulator&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.fileTypes&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "last_opened_file_path": "C:/Users/Rachel/OneDrive - TU Eindhoven/Kropman project/5-Code/TestingScript",
+    "settings.editor.selected.configurable": "preferences.fileTypes"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\Rachel\OneDrive - TU Eindhoven\Kropman project\5-Code\V2XTestbed" />
       <recent name="C:\Users\Rachel\OneDrive - TU Eindhoven\Kropman project\5-Code\V2XTestbed\ChargingSimulator" />
       <recent name="C:\Users\avans\PycharmProjects\ChargingController\ChargingSimulator\data" />
       <recent name="C:\Users\avans\PycharmProjects\ChargingController" />
@@ -135,7 +132,21 @@
       <option name="project" value="LOCAL" />
       <updated>1688034913557</updated>
     </task>
-    <option name="localTasksCounter" value="11" />
+    <task id="LOCAL-00011" summary="Add testing for also december.">
+      <created>1688044894973</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1688044894973</updated>
+    </task>
+    <task id="LOCAL-00012" summary="Add testing for also december.">
+      <created>1688048138453</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1688048138453</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -156,7 +167,8 @@
     <MESSAGE value="Price curve added in controller.py, but not in optimization." />
     <MESSAGE value="Plot the simulation with updated values from each iteration." />
     <MESSAGE value="Add uncontrolled script." />
-    <option name="LAST_COMMIT_MESSAGE" value="Add uncontrolled script." />
+    <MESSAGE value="Add testing for also december." />
+    <option name="LAST_COMMIT_MESSAGE" value="Add testing for also december." />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: ChargingSimulator/data/sim_out.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Datetime,Building Load (kWh),PV (kWh),Price (Euros/kWh),EV2,EV0,EV1\r\n2022-03-21 06:00:00,2.3362000000000003,0.0062,0.18685,0.0,0.0,0.0\r\n2022-03-21 06:05:00,3.4688,0.0064,0.18685,0.0,0.0,0.0\r\n2022-03-21 06:10:00,7.333799999999998,0.0052,0.18685,0.0,0.0,0.0\r\n2022-03-21 06:15:00,9.9364,0.0054,0.18685,0.0,0.0,0.0\r\n2022-03-21 06:20:00,8.617799999999999,0.0056,0.18685,0.0,0.0,0.0\r\n2022-03-21 06:25:00,7.0204,0.005,0.18685,0.0,0.0,0.0\r\n2022-03-21 06:30:00,7.170400000000001,0.005,0.18685,0.0,0.0,0.0\r\n2022-03-21 06:35:00,7.1068,0.0052,0.18685,0.0,0.0,0.0\r\n2022-03-21 06:40:00,8.106,0.0056,0.18685,0.0,0.0,0.0\r\n2022-03-21 06:45:00,8.8596,0.004,0.18685,0.0,0.0,0.0\r\n2022-03-21 06:50:00,10.828399999999998,-0.0438,0.18685,0.0,0.0,0.0\r\n2022-03-21 06:55:00,10.223,-0.121,0.18685,0.0,0.0,0.0\r\n2022-03-21 07:00:00,10.081,-0.2592,0.264,0.0,0.0,0.0\r\n2022-03-21 07:05:00,12.1986,-0.4352,0.264,0.0,0.0,0.0\r\n2022-03-21 07:10:00,15.060199999999998,-0.616,0.264,0.0,0.0,0.0\r\n2022-03-21 07:15:00,12.700400000000002,-0.8234,0.264,0.0,0.0,0.0\r\n2022-03-21 07:20:00,11.9242,-1.0654,0.264,0.0,0.0,0.0\r\n2022-03-21 07:25:00,11.9202,-1.3224,0.264,0.0,0.0,0.0\r\n2022-03-21 07:30:00,11.7654,-1.5524,0.264,0.0,0.0,0.0\r\n2022-03-21 07:35:00,12.8458,-1.7794,0.264,0.0,0.0,0.0\r\n2022-03-21 07:40:00,13.254599999999998,-2.0486,0.264,0.0,0.0,0.0\r\n2022-03-21 07:45:00,16.119199999999996,-2.3422,0.264,6.0,20.0,0.0\r\n2022-03-21 07:50:00,16.675199999999997,-2.6416,0.264,6.0,6.0,0.0\r\n2022-03-21 07:55:00,14.020599999999998,-2.9404,0.264,6.0,6.0,0.0\r\n2022-03-21 08:00:00,15.275799999999998,-3.228,0.288,6.0,6.0,0.0\r\n2022-03-21 08:05:00,16.4262,-3.566,0.288,6.0,6.0,0.0\r\n2022-03-21 08:10:00,13.914,-3.871,0.288,6.0,6.0,0.0\r\n2022-03-21 08:15:00,14.011599999999998,-4.1996,0.288,6.0,6.0,0.0\r\n2022-03-21 08:20:00,14.4208,-4.457800000000001,0.288,6.0,6.0,0.0\r\n2022-03-21 08:25:00,14.2604,-4.776999999999999,0.288,6.0,6.0,0.0\r\n2022-03-21 08:30:00,14.9564,-5.0566,0.288,6.0,6.0,6.0\r\n2022-03-21 08:35:00,16.532000000000004,-5.3476,0.288,6.0,6.0,6.0\r\n2022-03-21 08:40:00,13.9586,-5.6544,0.288,6.0,6.0,6.0\r\n2022-03-21 08:45:00,13.900799999999991,-5.9646,0.288,6.0,6.0,6.0\r\n2022-03-21 08:50:00,14.683800000000003,-6.2924,0.288,6.0,6.0,6.0\r\n2022-03-21 08:55:00,14.547600000000006,-6.5840000000000005,0.288,6.0,6.0,6.0\r\n2022-03-21 09:00:00,14.439599999999997,-6.885,0.26842,20.0,6.0,6.0\r\n2022-03-21 09:05:00,14.579000000000002,-7.1312,0.26842,6.0,6.0,6.0\r\n2022-03-21 09:10:00,14.108399999999998,-7.4068,0.26842,20.0,6.0,6.0\r\n2022-03-21 09:15:00,13.771200000000006,-7.6788,0.26842,20.0,20.0,6.0\r\n2022-03-21 09:20:00,15.504400000000002,-7.912000000000001,0.26842,20.0,20.0,6.0\r\n2022-03-21 09:25:00,13.838,-8.174800000000001,0.26842,20.0,20.0,6.0\r\n2022-03-21 09:30:00,13.599799999999998,-8.451600000000001,0.26842,20.0,20.0,6.0\r\n2022-03-21 09:35:00,13.621400000000005,-8.6816,0.26842,20.0,20.0,6.0\r\n2022-03-21 09:40:00,14.086600000000002,-8.8856,0.26842,20.0,20.0,6.0\r\n2022-03-21 09:45:00,13.731399999999995,-9.0934,0.26842,20.0,20.0,6.0\r\n2022-03-21 09:50:00,14.101200000000002,-9.27,0.26842,20.0,20.0,6.0\r\n2022-03-21 09:55:00,16.491,-9.4558,0.26842,20.0,20.0,20.0\r\n2022-03-21 10:00:00,16.019,-9.6424,0.21029,20.0,20.0,6.0\r\n2022-03-21 10:05:00,14.097800000000008,-9.8656,0.21029,20.0,20.0,6.0\r\n2022-03-21 10:10:00,14.107,-10.0126,0.21029,20.0,20.0,6.0\r\n2022-03-21 10:15:00,15.215800000000003,-10.1358,0.21029,20.0,20.0,6.0\r\n2022-03-21 10:20:00,13.7894,-10.295,0.21029,20.0,20.0,6.0\r\n2022-03-21 10:25:00,13.707600000000005,-10.492,0.21029,20.0,20.0,6.0\r\n2022-03-21 10:30:00,14.5828,-10.5904,0.21029,20.0,20.0,6.0\r\n2022-03-21 10:35:00,13.7838,-10.848,0.21029,20.0,20.0,6.0\r\n2022-03-21 10:40:00,13.7362,-11.0184,0.21029,20.0,20.0,6.0\r\n2022-03-21 10:45:00,13.870400000000002,-11.1042,0.21029,20.0,20.0,6.0\r\n2022-03-21 10:50:00,13.163400000000005,-11.2172,0.21029,20.0,20.0,6.0\r\n2022-03-21 10:55:00,13.657000000000004,-11.3956,0.21029,20.0,20.0,20.0\r\n2022-03-21 11:00:00,13.633,-11.4946,0.1928,20.0,20.0,20.0\r\n2022-03-21 11:05:00,14.913200000000003,-11.5186,0.1928,20.0,20.0,20.0\r\n2022-03-21 11:10:00,13.805599999999998,-11.6938,0.1928,20.0,20.0,20.0\r\n2022-03-21 11:15:00,13.633799999999995,-11.758,0.1928,20.0,20.0,20.0\r\n2022-03-21 11:20:00,14.425999999999997,-11.86,0.1928,20.0,20.0,20.0\r\n2022-03-21 11:25:00,13.919200000000002,-11.9312,0.1928,20.0,20.0,6.0\r\n2022-03-21 11:30:00,13.762199999999996,-11.9026,0.1928,20.0,20.0,20.0\r\n2022-03-21 11:35:00,13.674000000000005,-11.8156,0.1928,20.0,20.0,6.0\r\n2022-03-21 11:40:00,14.437200000000004,-11.9362,0.1928,20.0,20.0,20.0\r\n2022-03-21 11:45:00,17.2266,-12.0186,0.1928,20.0,20.0,20.0\r\n2022-03-21 11:50:00,15.002599999999996,-11.9974,0.1928,20.0,20.0,20.0\r\n2022-03-21 11:55:00,13.6548,-11.8688,0.1928,20.0,20.0,20.0\r\n2022-03-21 12:00:00,14.829599999999996,-11.916,0.1745,20.0,20.0,20.0\r\n2022-03-21 12:05:00,14.692999999999998,-11.9514,0.1745,20.0,20.0,20.0\r\n2022-03-21 12:10:00,13.6768,-11.9614,0.1745,20.0,20.0,20.0\r\n2022-03-21 12:15:00,13.402399999999997,-11.96,0.1745,20.0,20.0,20.0\r\n2022-03-21 12:20:00,13.729599999999998,-11.8732,0.1745,20.0,20.0,20.0\r\n2022-03-21 12:25:00,13.741600000000002,-11.9168,0.1745,20.0,20.0,20.0\r\n2022-03-21 12:30:00,15.2178,-11.871199999999998,0.1745,20.0,20.0,20.0\r\n2022-03-21 12:35:00,13.575,-11.789,0.1745,20.0,20.0,20.0\r\n2022-03-21 12:40:00,13.1956,-11.7634,0.1745,20.0,20.0,20.0\r\n2022-03-21 12:45:00,13.701200000000002,-11.7572,0.1745,20.0,20.0,20.0\r\n2022-03-21 12:50:00,14.185199999999998,-11.7654,0.1745,20.0,20.0,20.0\r\n2022-03-21 12:55:00,12.929799999999998,-11.6278,0.1745,20.0,20.0,20.0\r\n2022-03-21 13:00:00,13.093400000000004,-11.7018,0.15699,20.0,20.0,20.0\r\n2022-03-21 13:05:00,13.194,-11.6032,0.15699,20.0,20.0,20.0\r\n2022-03-21 13:10:00,13.4652,-11.5338,0.15699,20.0,20.0,20.0\r\n2022-03-21 13:15:00,13.711,-11.4124,0.15699,20.0,20.0,20.0\r\n2022-03-21 13:20:00,15.346799999999998,-11.4344,0.15699,20.0,20.0,20.0\r\n2022-03-21 13:25:00,14.034,-11.3042,0.15699,20.0,20.0,20.0\r\n2022-03-21 13:30:00,15.218999999999998,-11.151599999999998,0.15699,20.0,20.0,20.0\r\n2022-03-21 13:35:00,16.1094,-11.0982,0.15699,20.0,20.0,20.0\r\n2022-03-21 13:40:00,13.548199999999998,-11.0868,0.15699,20.0,20.0,20.0\r\n2022-03-21 13:45:00,13.4794,-10.9824,0.15699,20.0,20.0,20.0\r\n2022-03-21 13:50:00,13.6688,-10.8504,0.15699,20.0,20.0,20.0\r\n2022-03-21 13:55:00,13.9434,-10.8086,0.15699,20.0,20.0,20.0\r\n2022-03-21 14:00:00,13.5196,-10.718,0.15,6.8,20.0,20.0\r\n2022-03-21 14:05:00,14.0174,-10.7048,0.15,6.0,20.0,20.0\r\n2022-03-21 14:10:00,14.3556,-10.476,0.15,6.0,20.0,20.0\r\n2022-03-21 14:15:00,13.585,-10.3846,0.15,0.0,10.6,20.0\r\n2022-03-21 14:20:00,13.0286,-10.4018,0.15,0.0,6.0,20.0\r\n2022-03-21 14:25:00,12.919600000000004,-10.3102,0.15,0.0,6.0,20.0\r\n2022-03-21 14:30:00,12.839,-9.9414,0.15,0.0,0.0,20.0\r\n2022-03-21 14:35:00,13.0324,-9.6792,0.15,0.0,0.0,20.0\r\n2022-03-21 14:40:00,12.916000000000004,-9.5156,0.15,0.0,0.0,20.0\r\n2022-03-21 14:45:00,13.06,-9.3624,0.15,0.0,0.0,20.0\r\n2022-03-21 14:50:00,13.1202,-9.2348,0.15,0.0,0.0,20.0\r\n2022-03-21 14:55:00,13.0396,-9.0112,0.15,0.0,0.0,20.0\r\n2022-03-21 15:00:00,12.8046,-8.942,0.15071,0.0,0.0,20.0\r\n2022-03-21 15:05:00,12.9726,-8.878400000000001,0.15071,0.0,0.0,20.0\r\n2022-03-21 15:10:00,13.474600000000002,-8.5608,0.15071,0.0,0.0,20.0\r\n2022-03-21 15:15:00,12.5894,-8.264,0.15071,0.0,0.0,20.0\r\n2022-03-21 15:20:00,15.065,-8.0774,0.15071,0.0,0.0,20.0\r\n2022-03-21 15:25:00,14.4592,-7.8608,0.15071,0.0,0.0,20.0\r\n2022-03-21 15:30:00,13.142799999999998,-7.7398,0.15071,0.0,0.0,20.0\r\n2022-03-21 15:35:00,12.6612,-7.69,0.15071,0.0,0.0,20.0\r\n2022-03-21 15:40:00,12.740199999999998,-7.548399999999999,0.15071,0.0,0.0,20.0\r\n2022-03-21 15:45:00,12.8266,-7.177,0.15071,0.0,0.0,20.0\r\n2022-03-21 15:50:00,12.6942,-6.929399999999999,0.15071,0.0,0.0,20.0\r\n2022-03-21 15:55:00,12.63,-6.7328,0.15071,0.0,0.0,20.0\r\n2022-03-21 16:00:00,12.4396,-6.3716,0.21121,0.0,0.0,20.0\r\n2022-03-21 16:05:00,12.1872,-6.2308,0.21121,0.0,0.0,20.0\r\n2022-03-21 16:10:00,11.9334,-5.973000000000001,0.21121,0.0,0.0,20.0\r\n2022-03-21 16:15:00,12.0766,-5.6074,0.21121,0.0,0.0,14.97\r\n2022-03-21 16:20:00,11.9696,-5.3978,0.21121,0.0,0.0,6.0\r\n2022-03-21 16:25:00,12.7924,-5.1806,0.21121,0.0,0.0,6.0\r\n2022-03-21 16:30:00,11.811,-5.0062,0.21121,0.0,0.0,6.0\r\n2022-03-21 16:35:00,11.36,-4.7478,0.21121,0.0,0.0,6.0\r\n2022-03-21 16:40:00,10.202000000000002,-4.4488,0.21121,0.0,0.0,6.0\r\n2022-03-21 16:45:00,9.7456,-4.1984,0.21121,0.0,0.0,0.0\r\n2022-03-21 16:50:00,9.6516,-3.8058,0.21121,0.0,0.0,0.0\r\n2022-03-21 16:55:00,8.946,-3.44,0.21121,0.0,0.0,0.0\r\n2022-03-21 17:00:00,7.456200000000001,-3.2348,0.2323,0.0,0.0,0.0\r\n2022-03-21 17:05:00,6.941000000000001,-3.037,0.2323,0.0,0.0,0.0\r\n2022-03-21 17:10:00,7.002400000000001,-2.7814,0.2323,0.0,0.0,0.0\r\n2022-03-21 17:15:00,6.792599999999999,-2.5198,0.2323,0.0,0.0,0.0\r\n2022-03-21 17:20:00,6.8642,-2.2678000000000003,0.2323,0.0,0.0,0.0\r\n2022-03-21 17:25:00,7.0046,-2.0214,0.2323,0.0,0.0,0.0\r\n2022-03-21 17:30:00,6.830999999999999,-1.7622,0.2323,0.0,0.0,0.0\r\n2022-03-21 17:35:00,6.8994,-1.5554,0.2323,0.0,0.0,0.0\r\n2022-03-21 17:40:00,6.858,-1.3462,0.2323,0.0,0.0,0.0\r\n2022-03-21 17:45:00,7.0344,-1.0256,0.2323,0.0,0.0,0.0\r\n2022-03-21 17:50:00,6.9412,-0.9128,0.2323,0.0,0.0,0.0\r\n2022-03-21 17:55:00,7.1438,-0.8480000000000001,0.2323,0.0,0.0,0.0\r\n2022-03-21 18:00:00,7.7098,-0.7076,0.2582,0.0,0.0,0.0\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChargingSimulator/data/sim_out.csv b/ChargingSimulator/data/sim_out.csv
--- a/ChargingSimulator/data/sim_out.csv	(revision 4ee244a36043f5766de5fc78db0dc1a1ce500ea5)
+++ b/ChargingSimulator/data/sim_out.csv	(date 1688465200255)
@@ -35,18 +35,18 @@
 2022-03-21 08:45:00,13.900799999999991,-5.9646,0.288,6.0,6.0,6.0
 2022-03-21 08:50:00,14.683800000000003,-6.2924,0.288,6.0,6.0,6.0
 2022-03-21 08:55:00,14.547600000000006,-6.5840000000000005,0.288,6.0,6.0,6.0
-2022-03-21 09:00:00,14.439599999999997,-6.885,0.26842,20.0,6.0,6.0
+2022-03-21 09:00:00,14.439599999999997,-6.885,0.26842,6.0,6.0,6.0
 2022-03-21 09:05:00,14.579000000000002,-7.1312,0.26842,6.0,6.0,6.0
-2022-03-21 09:10:00,14.108399999999998,-7.4068,0.26842,20.0,6.0,6.0
-2022-03-21 09:15:00,13.771200000000006,-7.6788,0.26842,20.0,20.0,6.0
-2022-03-21 09:20:00,15.504400000000002,-7.912000000000001,0.26842,20.0,20.0,6.0
+2022-03-21 09:10:00,14.108399999999998,-7.4068,0.26842,6.8,6.0,6.0
+2022-03-21 09:15:00,13.771200000000006,-7.6788,0.26842,20.0,6.0,6.0
+2022-03-21 09:20:00,15.504400000000002,-7.912000000000001,0.26842,20.0,6.0,6.0
 2022-03-21 09:25:00,13.838,-8.174800000000001,0.26842,20.0,20.0,6.0
 2022-03-21 09:30:00,13.599799999999998,-8.451600000000001,0.26842,20.0,20.0,6.0
 2022-03-21 09:35:00,13.621400000000005,-8.6816,0.26842,20.0,20.0,6.0
 2022-03-21 09:40:00,14.086600000000002,-8.8856,0.26842,20.0,20.0,6.0
 2022-03-21 09:45:00,13.731399999999995,-9.0934,0.26842,20.0,20.0,6.0
 2022-03-21 09:50:00,14.101200000000002,-9.27,0.26842,20.0,20.0,6.0
-2022-03-21 09:55:00,16.491,-9.4558,0.26842,20.0,20.0,20.0
+2022-03-21 09:55:00,16.491,-9.4558,0.26842,20.0,20.0,6.0
 2022-03-21 10:00:00,16.019,-9.6424,0.21029,20.0,20.0,6.0
 2022-03-21 10:05:00,14.097800000000008,-9.8656,0.21029,20.0,20.0,6.0
 2022-03-21 10:10:00,14.107,-10.0126,0.21029,20.0,20.0,6.0
@@ -58,15 +58,15 @@
 2022-03-21 10:40:00,13.7362,-11.0184,0.21029,20.0,20.0,6.0
 2022-03-21 10:45:00,13.870400000000002,-11.1042,0.21029,20.0,20.0,6.0
 2022-03-21 10:50:00,13.163400000000005,-11.2172,0.21029,20.0,20.0,6.0
-2022-03-21 10:55:00,13.657000000000004,-11.3956,0.21029,20.0,20.0,20.0
+2022-03-21 10:55:00,13.657000000000004,-11.3956,0.21029,20.0,20.0,6.0
 2022-03-21 11:00:00,13.633,-11.4946,0.1928,20.0,20.0,20.0
 2022-03-21 11:05:00,14.913200000000003,-11.5186,0.1928,20.0,20.0,20.0
 2022-03-21 11:10:00,13.805599999999998,-11.6938,0.1928,20.0,20.0,20.0
 2022-03-21 11:15:00,13.633799999999995,-11.758,0.1928,20.0,20.0,20.0
 2022-03-21 11:20:00,14.425999999999997,-11.86,0.1928,20.0,20.0,20.0
-2022-03-21 11:25:00,13.919200000000002,-11.9312,0.1928,20.0,20.0,6.0
+2022-03-21 11:25:00,13.919200000000002,-11.9312,0.1928,20.0,20.0,20.0
 2022-03-21 11:30:00,13.762199999999996,-11.9026,0.1928,20.0,20.0,20.0
-2022-03-21 11:35:00,13.674000000000005,-11.8156,0.1928,20.0,20.0,6.0
+2022-03-21 11:35:00,13.674000000000005,-11.8156,0.1928,20.0,20.0,20.0
 2022-03-21 11:40:00,14.437200000000004,-11.9362,0.1928,20.0,20.0,20.0
 2022-03-21 11:45:00,17.2266,-12.0186,0.1928,20.0,20.0,20.0
 2022-03-21 11:50:00,15.002599999999996,-11.9974,0.1928,20.0,20.0,20.0
@@ -95,52 +95,52 @@
 2022-03-21 13:45:00,13.4794,-10.9824,0.15699,20.0,20.0,20.0
 2022-03-21 13:50:00,13.6688,-10.8504,0.15699,20.0,20.0,20.0
 2022-03-21 13:55:00,13.9434,-10.8086,0.15699,20.0,20.0,20.0
-2022-03-21 14:00:00,13.5196,-10.718,0.15,6.8,20.0,20.0
-2022-03-21 14:05:00,14.0174,-10.7048,0.15,6.0,20.0,20.0
+2022-03-21 14:00:00,13.5196,-10.718,0.15,20.0,20.0,20.0
+2022-03-21 14:05:00,14.0174,-10.7048,0.15,20.0,20.0,20.0
 2022-03-21 14:10:00,14.3556,-10.476,0.15,6.0,20.0,20.0
-2022-03-21 14:15:00,13.585,-10.3846,0.15,0.0,10.6,20.0
-2022-03-21 14:20:00,13.0286,-10.4018,0.15,0.0,6.0,20.0
-2022-03-21 14:25:00,12.919600000000004,-10.3102,0.15,0.0,6.0,20.0
+2022-03-21 14:15:00,13.585,-10.3846,0.15,-0.0,20.0,20.0
+2022-03-21 14:20:00,13.0286,-10.4018,0.15,0.0,20.0,20.0
+2022-03-21 14:25:00,12.919600000000004,-10.3102,0.15,-0.0,10.6,20.0
 2022-03-21 14:30:00,12.839,-9.9414,0.15,0.0,0.0,20.0
-2022-03-21 14:35:00,13.0324,-9.6792,0.15,0.0,0.0,20.0
-2022-03-21 14:40:00,12.916000000000004,-9.5156,0.15,0.0,0.0,20.0
-2022-03-21 14:45:00,13.06,-9.3624,0.15,0.0,0.0,20.0
-2022-03-21 14:50:00,13.1202,-9.2348,0.15,0.0,0.0,20.0
+2022-03-21 14:35:00,13.0324,-9.6792,0.15,0.0,-0.0,20.0
+2022-03-21 14:40:00,12.916000000000004,-9.5156,0.15,-0.0,-0.0,20.0
+2022-03-21 14:45:00,13.06,-9.3624,0.15,-0.0,-0.0,20.0
+2022-03-21 14:50:00,13.1202,-9.2348,0.15,-0.0,-0.0,20.0
 2022-03-21 14:55:00,13.0396,-9.0112,0.15,0.0,0.0,20.0
-2022-03-21 15:00:00,12.8046,-8.942,0.15071,0.0,0.0,20.0
-2022-03-21 15:05:00,12.9726,-8.878400000000001,0.15071,0.0,0.0,20.0
+2022-03-21 15:00:00,12.8046,-8.942,0.15071,-0.0,0.0,20.0
+2022-03-21 15:05:00,12.9726,-8.878400000000001,0.15071,-0.0,0.0,20.0
 2022-03-21 15:10:00,13.474600000000002,-8.5608,0.15071,0.0,0.0,20.0
 2022-03-21 15:15:00,12.5894,-8.264,0.15071,0.0,0.0,20.0
 2022-03-21 15:20:00,15.065,-8.0774,0.15071,0.0,0.0,20.0
-2022-03-21 15:25:00,14.4592,-7.8608,0.15071,0.0,0.0,20.0
+2022-03-21 15:25:00,14.4592,-7.8608,0.15071,-0.0,0.0,20.0
 2022-03-21 15:30:00,13.142799999999998,-7.7398,0.15071,0.0,0.0,20.0
-2022-03-21 15:35:00,12.6612,-7.69,0.15071,0.0,0.0,20.0
-2022-03-21 15:40:00,12.740199999999998,-7.548399999999999,0.15071,0.0,0.0,20.0
+2022-03-21 15:35:00,12.6612,-7.69,0.15071,-0.0,0.0,20.0
+2022-03-21 15:40:00,12.740199999999998,-7.548399999999999,0.15071,0.0,-0.0,20.0
 2022-03-21 15:45:00,12.8266,-7.177,0.15071,0.0,0.0,20.0
-2022-03-21 15:50:00,12.6942,-6.929399999999999,0.15071,0.0,0.0,20.0
-2022-03-21 15:55:00,12.63,-6.7328,0.15071,0.0,0.0,20.0
+2022-03-21 15:50:00,12.6942,-6.929399999999999,0.15071,0.0,-0.0,20.0
+2022-03-21 15:55:00,12.63,-6.7328,0.15071,-0.0,-0.0,20.0
 2022-03-21 16:00:00,12.4396,-6.3716,0.21121,0.0,0.0,20.0
-2022-03-21 16:05:00,12.1872,-6.2308,0.21121,0.0,0.0,20.0
+2022-03-21 16:05:00,12.1872,-6.2308,0.21121,-0.0,-0.0,20.0
 2022-03-21 16:10:00,11.9334,-5.973000000000001,0.21121,0.0,0.0,20.0
-2022-03-21 16:15:00,12.0766,-5.6074,0.21121,0.0,0.0,14.97
-2022-03-21 16:20:00,11.9696,-5.3978,0.21121,0.0,0.0,6.0
-2022-03-21 16:25:00,12.7924,-5.1806,0.21121,0.0,0.0,6.0
-2022-03-21 16:30:00,11.811,-5.0062,0.21121,0.0,0.0,6.0
-2022-03-21 16:35:00,11.36,-4.7478,0.21121,0.0,0.0,6.0
-2022-03-21 16:40:00,10.202000000000002,-4.4488,0.21121,0.0,0.0,6.0
-2022-03-21 16:45:00,9.7456,-4.1984,0.21121,0.0,0.0,0.0
-2022-03-21 16:50:00,9.6516,-3.8058,0.21121,0.0,0.0,0.0
-2022-03-21 16:55:00,8.946,-3.44,0.21121,0.0,0.0,0.0
+2022-03-21 16:15:00,12.0766,-5.6074,0.21121,-0.0,-0.0,14.97
+2022-03-21 16:20:00,11.9696,-5.3978,0.21121,-0.0,0.0,6.0
+2022-03-21 16:25:00,12.7924,-5.1806,0.21121,0.0,-0.0,6.0
+2022-03-21 16:30:00,11.811,-5.0062,0.21121,-0.0,-0.0,6.0
+2022-03-21 16:35:00,11.36,-4.7478,0.21121,-0.0,-0.0,6.0
+2022-03-21 16:40:00,10.202000000000002,-4.4488,0.21121,-0.0,-0.0,6.0
+2022-03-21 16:45:00,9.7456,-4.1984,0.21121,-0.0,-0.0,-0.0
+2022-03-21 16:50:00,9.6516,-3.8058,0.21121,-0.0,-0.0,-0.0
+2022-03-21 16:55:00,8.946,-3.44,0.21121,0.0,-0.0,0.0
 2022-03-21 17:00:00,7.456200000000001,-3.2348,0.2323,0.0,0.0,0.0
 2022-03-21 17:05:00,6.941000000000001,-3.037,0.2323,0.0,0.0,0.0
-2022-03-21 17:10:00,7.002400000000001,-2.7814,0.2323,0.0,0.0,0.0
+2022-03-21 17:10:00,7.002400000000001,-2.7814,0.2323,-0.0,0.0,0.0
 2022-03-21 17:15:00,6.792599999999999,-2.5198,0.2323,0.0,0.0,0.0
 2022-03-21 17:20:00,6.8642,-2.2678000000000003,0.2323,0.0,0.0,0.0
 2022-03-21 17:25:00,7.0046,-2.0214,0.2323,0.0,0.0,0.0
 2022-03-21 17:30:00,6.830999999999999,-1.7622,0.2323,0.0,0.0,0.0
 2022-03-21 17:35:00,6.8994,-1.5554,0.2323,0.0,0.0,0.0
-2022-03-21 17:40:00,6.858,-1.3462,0.2323,0.0,0.0,0.0
+2022-03-21 17:40:00,6.858,-1.3462,0.2323,-0.0,-0.0,-0.0
 2022-03-21 17:45:00,7.0344,-1.0256,0.2323,0.0,0.0,0.0
-2022-03-21 17:50:00,6.9412,-0.9128,0.2323,0.0,0.0,0.0
-2022-03-21 17:55:00,7.1438,-0.8480000000000001,0.2323,0.0,0.0,0.0
-2022-03-21 18:00:00,7.7098,-0.7076,0.2582,0.0,0.0,0.0
+2022-03-21 17:50:00,6.9412,-0.9128,0.2323,-0.0,0.0,0.0
+2022-03-21 17:55:00,7.1438,-0.8480000000000001,0.2323,-0.0,0.0,-0.0
+2022-03-21 18:00:00,7.7098,-0.7076,0.2582,0.0,-0.0,-0.0
Index: ChargingSimulator/OptimizationModel.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># -*- coding: utf-8 -*-\r\nfrom pyomo.environ import *\r\nimport pandas as pd\r\nimport pyomo.environ as pyo\r\nimport datetime\r\nfrom ChargingSimulator.parameters import param\r\n\r\ndef runOptimization(df_load, df_ev, tnow, Ts_data, price_input):\r\n    #converting the datetime object to an integer which can be processed by Pyomo\r\n    #df_ev = df_ev.loc[df_ev['E_requested'] >= 0.01]\r\n    df_ev['T_arrival'] = tnow\r\n    df_ev['I_arrival'] = df_ev['T_arrival'].apply(lambda x: x.value).copy()\r\n    df_ev['I_departure'] = df_ev['T_departure'].apply(lambda x: x.value).copy()\r\n\r\n    #Checking to see whether or not the arrival time is within the loads dataframe\r\n    df_ev = df_ev[df_ev.index.isin(df_ev['I_arrival'].loc[df_ev['I_arrival'].isin(df_load.index)].index)].copy()\r\n    dummies  = pd.DataFrame([[param['eff'],param['Imin'],param['Imax'], param['Vcharger']]],columns=['eff', 'Imin', 'Imax', 'Vcharger'],index=['Data'])\r\n    \r\n\r\n    def create_model(input_load, input_ev, dummies, Ts_data):\r\n        # Pyomo model\r\n        model = ConcreteModel()\r\n    \r\n        # Creation of Set\r\n        model.N = Set(ordered = True, initialize = RangeSet(0,len(input_load.index)-1)) #Horizon\r\n        model.V = Set(ordered = True, initialize = RangeSet(0,len(input_ev.index)-1))   #Chargers\r\n        model.S = Set(ordered = True, initialize = dummies.index)                       #Single variables\r\n    \r\n        # Creation Parameters\r\n        model.Pload = Param(model.N, within = NonNegativeReals, mutable = True)\r\n        model.Ppv = Param(model.N, within = Reals, mutable = True)\r\n        model.T = Param(model.N, within = NonNegativeReals, mutable = True)\r\n        model.price = Param(model.N, within=Reals, mutable=True)\r\n        model.priceSign = Param(model.N, within=Reals, mutable=True)\r\n    \r\n        model.E_requested = Param(model.V, within=NonNegativeReals, mutable=True)\r\n        model.T_arrival = Param(model.V, within=NonNegativeReals, mutable=True)\r\n        model.T_departure = Param(model.V, within=NonNegativeReals, mutable=True)\r\n        model.P_previous = Param(model.V, within=NonNegativeReals, mutable=True)\r\n        \r\n        model.eff = Param(model.S, within = NonNegativeReals, mutable = True)\r\n        model.imin = Param(model.S, within = NonNegativeReals, mutable = True)\r\n        model.imax = Param(model.S, within = NonNegativeReals, mutable = True)\r\n        model.vcharger = Param(model.S, within = NonNegativeReals, mutable = True)\r\n    \r\n        # Update parameters\r\n        for s in model.S:\r\n            model.eff[s] = dummies.loc[s, 'eff']\r\n            model.imin[s] = dummies.loc[s, 'Imin']\r\n            model.imax[s] = dummies.loc[s, 'Imax']\r\n            model.vcharger[s] = dummies.loc[s, 'Vcharger']\r\n        \r\n        # Indexed:\r\n        for k in model.N:\r\n            model.T[k] = input_load.index[k]\r\n            model.Pload[k] = input_load['Load'].iloc[k]\r\n            model.Ppv[k] = input_load['PV'].iloc[k]\r\n            model.price[k] = price_input['Price (Euros/kWh)'].iloc[k]\r\n            model.priceSign[k] = price_input['sign'].iloc[k]\r\n                \r\n        for i in model.V:\r\n            model.E_requested[i] = input_ev['E_requested'][i]\r\n            model.T_arrival[i] = input_ev['I_arrival'][i]\r\n            model.T_departure[i] = input_ev['I_departure'][i]\r\n\r\n  \r\n        # Creation of Variables\r\n        model.Pgrid = Var(model.N, within = Reals)\r\n        model.Pevtot = Var(model.N, within = Reals)\r\n        model.Icharge = Var(model.N, model.V, within = Reals)\r\n        model.Pcharge = Var(model.N, model.V, within = Reals)\r\n        model.Pev = Var(model.N, model.V, within = Reals)\r\n        model.Eev = Var(model.N, model.V, within = Reals)\r\n        model.Idiff = Var(model.N, model.V, within=Reals) # for switching\r\n    \r\n        # Creation of constraints\r\n        def Energy(model, k, i):\r\n            if pyo.value(model.T[k]) <= pyo.value(model.T_arrival[i]):\r\n                return model.Eev[k, i] == 0\r\n            if pyo.value(model.T_arrival[i]) < pyo.value(model.T[k]) < pyo.value(model.T_departure[i]):\r\n                return model.Eev[k, i] == (model.Eev[model.N.prev(k),i] + (model.Pev[model.N.prev(k), i]*Ts_data/60))\r\n            if pyo.value(model.T[k]) >= pyo.value(model.T_departure[i]):\r\n                return model.Eev[model.N.prev(k),i] + (model.Pev[model.N.prev(k), i]*Ts_data/60) == model.E_requested[i]\r\n\r\n        def Power_ev(model, s, k, i):\r\n            return model.Pev[k, i] == model.eff[s] * model.Pcharge[k, i]\r\n\r\n        def Pev_aggregated(model, k):\r\n            return model.Pevtot[k] == sum(model.Pcharge[k, i] for i in model.V)\r\n            \r\n        def Balance(model, k):\r\n            return model.Pgrid[k] == model.Pload[k] + model.Ppv[k] + model.Pevtot[k]\r\n\r\n        def Power_charger(model, s, k, i):\r\n            return model.Pcharge[k, i] == (model.Icharge[k, i] * model.vcharger[s]) / 1000\r\n\r\n        def Icharge_max(model, s, k, i):\r\n            return model.Icharge[k, i] <= model.imax[s]\r\n\r\n        def Current(model, s, k, i):\r\n            if pyo.value(model.T[k]) < pyo.value(model.T_arrival[i]) or pyo.value(model.T[k]) >= pyo.value(\r\n                    model.T_departure[i]):\r\n                return model.Icharge[k, i] == 0\r\n            else:\r\n                return model.Icharge[k, i] >= model.imin[s]\r\n\r\n        def Current_diff(model, k, i): # for switching\r\n            if k == 0:\r\n                return model.Idiff[k, i] == 0\r\n            else:\r\n                return model.Idiff[k, i] == (model.Icharge[k, i] - model.Icharge[model.N.prev(k), i]) ** 2\r\n\r\n\r\n        model.con_Energy = Constraint(model.N, model.V, rule=Energy)\r\n        model.con_Power_ev = Constraint(model.S, model.N, model.V, rule=Power_ev)\r\n        model.con_P_aggregated = Constraint(model.N, rule=Pev_aggregated)\r\n        model.con_Balance = Constraint(model.N, rule=Balance)\r\n        model.con_Power_charger = Constraint(model.S, model.N, model.V, rule=Power_charger)\r\n        model.con_Icharge_max = Constraint(model.S, model.N, model.V, rule=Icharge_max)\r\n        model.con_Current = Constraint(model.S, model.N, model.V, rule=Current)\r\n        model.con_Current_diff = Constraint(model.N, model.V, rule=Current_diff) # for switching\r\n\r\n\r\n        def costfunction(model, k):\r\n            #return sum(model.priceSign[k]*(model.price[k]*model.Pgrid[k])**2 for k in model.N) - 0.4*sum(((1/(1+model.price[k]))*model.Pcharge[k, i])**2 for k in model.N for i in model.V)\r\n            #return sum(model.priceSign[k]*(model.price[k]*model.Pgrid[k])**2 for k in model.N)\r\n            return sum(model.Idiff[k,i] for k in model.N for i in model.V) + sum(model.priceSign[k]*(model.price[k]*model.Pgrid[k])**2 for k in model.N) - 40*sum(((1/(1+model.price[k]))*model.Pcharge[k, i])**2 for k in model.N for i in model.V)\r\n            #return sum(model.priceSign[k]*(model.price[k]*model.Pgrid[k])**2 for k in model.N)  - 0.4*sum(((1/(1+model.price[k]))*model.Pcharge[k, i])**2 for k in model.N for i in model.V)\r\n\r\n        model.obj = Objective(rule=costfunction, sense=minimize)\r\n    \r\n        return model\r\n\r\n    mymodel = create_model(df_load, df_ev, dummies, Ts_data)\r\n    solver = SolverFactory('ipopt') # This is ipopt, locally installed nonlinear solver\r\n    solver.options['max_iter'] = 100000 # Number of iterations\r\n    try:\r\n        results = solver.solve(mymodel, tee=False)  # tee means to show the steps of the solver\r\n\r\n        pv = [mymodel.Ppv[k]() for k in mymodel.N]\r\n        load = [mymodel.Pload[k]() for k in mymodel.N]\r\n        grid = [mymodel.Pgrid[k]() for k in mymodel.N]\r\n        time = [mymodel.T[k]() for k in mymodel.N]\r\n\r\n        E_EV = []\r\n        P_EV = []\r\n        Icharge = []\r\n\r\n        for i in mymodel.V:\r\n            E_EV.append([mymodel.Eev[k, i]() for k in mymodel.N])\r\n            P_EV.append([mymodel.Pev[k, i]() for k in mymodel.N])\r\n            Icharge.append([mymodel.Icharge[k, i]() for k in mymodel.N])\r\n        Icharge = [[round(num, 2) for num in sublist] for sublist in Icharge]\r\n\r\n        P_EVT = [mymodel.Pevtot[k]() for k in mymodel.N]\r\n\r\n        result_df = pd.DataFrame()\r\n        for i in mymodel.V:\r\n            result_df['EV' + str(df_ev['ChargerId'][i])] = pd.DataFrame(data=E_EV[i])\r\n            result_df['PEV' + str(df_ev['ChargerId'][i])] = pd.DataFrame(data=P_EV[i])\r\n            result_df['Current' + str(df_ev['ChargerId'][i])] = pd.DataFrame(data=Icharge[i])\r\n\r\n        result_df['PEVTot'] = pd.DataFrame(data=P_EVT)\r\n        result_df['PV'] = pd.DataFrame(data=pv)\r\n        result_df['Load'] = pd.DataFrame(data=load)\r\n        result_df['Grid'] = pd.DataFrame(data=grid)\r\n        result_df['Time'] = pd.DataFrame(data=time)\r\n        result_df.index = df_load.index # with datetime index presented by int\r\n\r\n        df_result = result_df.copy()\r\n        df_result.index = pd.to_datetime(df_load.index) # with datetime index\r\n\r\n        print(\"Optimization at time = \" + str(tnow))\r\n        ## Printing the calculated values\r\n        for i in range(len(Icharge)):\r\n            print(\"EV\" + str(df_ev['ChargerId'][i]) + \" (requesting \" + str(df_ev.iloc[i, 1]) + \" kWh) is charged at \" + str(round(df_result['Current' + str(df_ev['ChargerId'][i])].loc[str(tnow)], 2)) + \"A at \" + str(tnow))\r\n            sim_out = pd.read_csv('ChargingSimulator/data/sim_out.csv', index_col=0)\r\n            sim_out.index = pd.to_datetime(sim_out.index)\r\n            sim_out[\"EV\" + str(df_ev['ChargerId'][i])].update(df_result['Current' + str(df_ev['ChargerId'][i])])\r\n            #sim_out[\"EV\" + str(df_ev['ChargerId'][i])] = sim_out[\"EV\" + str(df_ev['ChargerId'][i])].combine(df_result['Current' + str(df_ev['ChargerId'][i])], lambda x1, x2: x1 if pd.isna(x2) else x2)\r\n            sim_out.to_csv('ChargingSimulator/data/sim_out.csv', header=True, index=True)\r\n\r\n        for i in mymodel.V:\r\n            df_ev.iloc[i, 1] = df_ev.iloc[i, 1] - df_result['EV' + str(df_ev['ChargerId'][i])][str(tnow + datetime.timedelta(minutes=Ts_data))]\r\n            if df_ev.iloc[i, 1] < 0 or round(df_ev.iloc[i, 1], 2) == 0.00:\r\n                df_ev.iloc[i, 1] = 0\r\n\r\n        df_ev.to_csv(\"ChargingSimulator/data/ev.csv\", index=False)\r\n        #print('ev status updated.')\r\n\r\n\r\n    except Exception as SolverError:\r\n        print(\"!! Error with solver error:\" + str(SolverError))\r\n\r\n    if ('EV' + param['Controlled_ev']) in df_result.columns:\r\n        Inow = round(df_result['Current' + param['Controlled_ev']].loc[str(tnow)], 2)\r\n    else:\r\n        Inow = param['Imin']\r\n\r\n    return Inow
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChargingSimulator/OptimizationModel.py b/ChargingSimulator/OptimizationModel.py
--- a/ChargingSimulator/OptimizationModel.py	(revision 4ee244a36043f5766de5fc78db0dc1a1ce500ea5)
+++ b/ChargingSimulator/OptimizationModel.py	(date 1688454320157)
@@ -54,7 +54,7 @@
         for k in model.N:
             model.T[k] = input_load.index[k]
             model.Pload[k] = input_load['Load'].iloc[k]
-            model.Ppv[k] = input_load['PV'].iloc[k]
+            model.Ppv[k] = input_load['PV'].iloc[k] * param['PV_scale_factor']
             model.price[k] = price_input['Price (Euros/kWh)'].iloc[k]
             model.priceSign[k] = price_input['sign'].iloc[k]
                 
